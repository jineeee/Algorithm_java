import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class BJ2606 {
	static int com;
	static int pair;
	static int[][] map;
	static boolean[] virus;
	static Queue<Integer> q = new LinkedList<Integer>();
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		com = Integer.parseInt(st.nextToken());
		
		st = new StringTokenizer(br.readLine());
		pair = Integer.parseInt(st.nextToken());
		
		map = new int[com+1][com+1];
		virus = new boolean[com+1];
		
		System.out.println(com + pair);
//		while (com --> 0) {
//			st = new StringTokenizer(br.readLine());
//			int x = Integer.parseInt(st.nextToken());
//			int y = Integer.parseInt(st.nextToken());
//			map[x][y] = map[y][x] = 1;
//		}
		
		bfs();
	}
	
	static void bfs() {
		int now = 1;
		virus[now] = true;
		q.offer(now);
		while(!q.isEmpty()) {
			q.poll();
			for(int i=1; i<=com; i++) {
				if(map[now][i]==1 && !virus[now]) {
					q.offer(i);
				}
			}
		}
		
	}
}
